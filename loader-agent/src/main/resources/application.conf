akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "WARNING"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

//  actor {
//    provider = "akka.cluster.ClusterActorRefProvider"
//  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
      maximum-frame-size=25000000
    }
  }

  cluster {
    auto-down-unreachable-after = 10s
  }
}

io-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 2
    core-pool-size-factor = 4.0
    core-pool-size-max = 32
  }
  throughput = 1
}

stream-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 2
    core-pool-size-factor = 8.0
    core-pool-size-max = 64
  }
  throughput = 1
}


worker-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 8
    core-pool-size-factor = 2.0
    core-pool-size-max = 8
  }
  throughput = 1
}

collector-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 2
    core-pool-size-factor = 8.0
    core-pool-size-max = 64
  }
  throughput = 1
}